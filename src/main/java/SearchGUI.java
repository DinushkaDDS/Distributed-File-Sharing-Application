
import java.io.IOException;
import java.net.DatagramPacket;
import java.net.DatagramSocket;
import java.net.InetAddress;
import java.net.SocketException;
import java.net.SocketTimeoutException;
import java.net.UnknownHostException;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author dilan
 */
public class SearchGUI extends javax.swing.JPanel {

    /**
     * Creates new form ShareGUI
     */
    
    private Node node;
    private JFrame frame;
    
    
    public SearchGUI(JFrame frame, Node n) {
        initComponents();
        this.node = n;
        this.frame = frame;
        this.lblName.setText(this.node.getName());
        this.lblName.setToolTipText(this.node.getIp()+ " " + this.node.getPort());
        this.startListening();
        this.lstFiles.setModel(this.node.fileDetailsList);
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnExit = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnSearch = new javax.swing.JButton();
        txtSearchFile = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstFiles = new javax.swing.JList<>();
        jButton1 = new javax.swing.JButton();
        btnMyFiles = new javax.swing.JButton();
        btnViewPeers = new javax.swing.JButton();
        lblName = new javax.swing.JLabel();

        btnExit.setText("Logout()");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        jLabel1.setText("File Search");

        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        txtSearchFile.setToolTipText("File name to Search");

        lstFiles.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Searched files will be shown here!" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        lstFiles.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(lstFiles);

        jButton1.setText("Download");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btnMyFiles.setText("My Shared Files");
        btnMyFiles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMyFilesActionPerformed(evt);
            }
        });

        btnViewPeers.setText("Connected peers");
        btnViewPeers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewPeersActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(txtSearchFile)
                        .addGap(28, 28, 28)
                        .addComponent(btnSearch)
                        .addGap(92, 92, 92))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 366, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(btnMyFiles)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE)
                        .addComponent(jButton1)
                        .addGap(157, 157, 157)
                        .addComponent(btnExit))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(lblName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(59, 59, 59)
                        .addComponent(btnViewPeers)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnViewPeers)
                    .addComponent(lblName))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSearchFile, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnExit)
                    .addComponent(jButton1)
                    .addComponent(btnMyFiles))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    
    //Node should unregister from the Server and should send the Leave msg to neighbour
    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        
        try {
            
            boolean leaveStatus = this.node.leaveNodes();
            boolean unregStatus = false;
            
            if(leaveStatus){
                unregStatus = this.node.unRegFromServer();
            }
            
            if(unregStatus){
                this.frame.dispose();
                this.node.disposeNode();
                GUI gui = new GUI();
            }
            
            
        } catch (SocketTimeoutException ex) {
            JOptionPane.showMessageDialog(frame,"Error Connecting to Server. Try Again!","Error!",JOptionPane.ERROR_MESSAGE);
        } catch (UnknownHostException ex) {
            Logger.getLogger(Node.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Node.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Throwable ex) {
            Logger.getLogger(SearchGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_btnExitActionPerformed
    
    private void btnViewPeersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewPeersActionPerformed
                
        JOptionPane.showMessageDialog(frame, this.node.viewPeers() ,"Peer Info",JOptionPane.INFORMATION_MESSAGE);
        
    }//GEN-LAST:event_btnViewPeersActionPerformed

    private void btnMyFilesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMyFilesActionPerformed
        
        ShareGUI shareGUI = new ShareGUI();
        JFrame shareGuiFrame = new JFrame();
        
        shareGuiFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        shareGuiFrame.getContentPane().add(shareGUI);
        shareGuiFrame.pack();
        shareGuiFrame.setVisible(true);
        
    }//GEN-LAST:event_btnMyFilesActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        try {
            // TODO add your handling code here:
            lstFiles.removeAll();
            this.node.fileDetailsList.removeAllElements();
            
            String fileNamePart = txtSearchFile.getText();
            fileNamePart = fileNamePart.replaceAll(" ", "@@@@@");
            
            byte msg[] = null;
            
            String searchMsg = "SER";
            
            //Change the Message as required
            searchMsg = searchMsg + " " + node.getIp() + " " + node.getPort() +" " + fileNamePart + " 0";
            searchMsg = String.format("%04d", searchMsg.length() + 5) + " " + searchMsg;
            msg = searchMsg.getBytes();
            
            DatagramSocket ds = new DatagramSocket();
            ds.setSoTimeout(1000);
            
            Map<Integer, String> neighbours = this.node.getNeighbours();
            
            //Send UDP packets to each node
            for (Map.Entry<Integer, String> entry : neighbours.entrySet()) {
                
                InetAddress neighbourIp = InetAddress.getByName(entry.getValue());
                int neighbourPort = entry.getKey();

                DatagramPacket DpSend = new DatagramPacket(msg, msg.length, neighbourIp, neighbourPort);
                ds.send(DpSend); 
                System.out.println("Outgoing --> " + searchMsg);
            }
            
        } catch (SocketException ex) {
            Logger.getLogger(SearchGUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnknownHostException ex) {
            Logger.getLogger(SearchGUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(SearchGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }//GEN-LAST:event_btnSearchActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        if(lstFiles.getSelectedIndex()==-1){
            return;
        }
        
        String fileDetails = lstFiles.getSelectedValue();
        
        Downloader downloadWindow = new Downloader(fileDetails);
        JFrame downloadGuiFrame = new JFrame();
        
        downloadGuiFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        downloadGuiFrame.getContentPane().add(downloadWindow);
        downloadGuiFrame.pack();
        downloadGuiFrame.setVisible(true);
        
    }//GEN-LAST:event_jButton1ActionPerformed
    
    private void startListening(){
        Thread t = new Thread(this.node);
        t.start();
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnMyFiles;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnViewPeers;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblName;
    private javax.swing.JList<String> lstFiles;
    private javax.swing.JTextField txtSearchFile;
    // End of variables declaration//GEN-END:variables
}
